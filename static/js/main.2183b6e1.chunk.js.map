{"version":3,"sources":["Message.js","ChatRoom.js","images/Logo.png","drawerAndNav.js","images/loginbackground.png","NewChannel.js","App.js","Login.js","Signup.js","welcome.js","Runner.js","index.js"],"names":["useStyles","makeStyles","theme","paper","color","backgroundColor","maxWidth","width","display","text","paddingLeft","paddingRight","Message","props","classes","currentUser","username","user","Grid","container","item","direction","xs","style","marginBottom","margin","marginLeft","marginRight","padding","fill","icon","background","borderRadius","Paper","className","elevation","message","Typography","variant","float","font","label","focusedLabel","ChatRoom","messagesEndRef","useRef","useEffect","current","scrollIntoView","behavior","messages","alignItems","chatSpace","textAlign","channel","name","height","window","innerHeight","overflowY","overflowX","sort","a","b","data","id","map","ref","autoComplete","form","onSubmit","e","preventDefault","target","value","makeMessage","currentTarget","reset","TextField","placeholder","InputLabelProps","root","focused","InputProps","IconButton","type","aria-label","align","fontSize","drawerWidth","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","spacing","breakpoints","up","list","login","DrawerAndNav","useTheme","React","useState","open","setOpen","CssBaseline","AppBar","position","clsx","Toolbar","justifyContent","onClick","edge","src","logo","alt","Button","handleLogout","Drawer","toolbar","Divider","List","index","ListItem","button","ListItemIcon","ListItemText","primary","overflow","handleNewChannelOpen","channels","setChannel","modal","maxHeight","top","left","backgroundImage","backgroundLogo","backgroundSize","border","NewChannel","noValidate","ev","createNewChannel","paddingTop","loginTheme","createMuiTheme","palette","main","secondary","flexGrow","info","mixins","content","App","cableURL","allChannels","setAllChannels","currentChannel","setCurrentChannel","openWebSocket","webSocketUrl","channelId","socket","WebSocket","onopen","event","meta","msg","JSON","stringify","command","identifier","send","newChannelOpen","setNewChannelOpen","handleNewChannelClose","setNewMessage","evData","response","parse","prevState","message_info","fetchUser","headers","localStorage","getItem","fetch","res","json","setCurrentUser","getOldMessages","console","log","stay","then","arr","setItem","onmessage","removeItem","setToken","Container","words","method","body","channel_id","alert","Modal","onClose","aria-labelledby","aria-describedby","ThemeProvider","channelInfo","Login","Signup","signup","signUp","Welcome","loginOpen","setLoginOpen","signupOpen","setSignupOpen","handleLoginClose","handleSignupClose","Runner","token","password","changeToken","change","exact","path","render","to","typography","h3","fontFamily","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.2183b6e1.chunk.js","sourcesContent":["import React from 'react'\n// import { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n// import Container from '@material-ui/core/Container';\nimport { Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\n// import { grid, width } from '@material-ui/system';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        color: \"white\",\n        backgroundColor: \"#20b5a2\",\n        maxWidth: \"100%\",\n        width: 'fit-content',\n        display: \"inlineBlock\",\n    },\n    text: {\n        paddingLeft: \"8px\",\n        paddingRight: \"8px\"\n    }\n}))\n\nconst Message = (props) => {\n    const classes = useStyles();\n\n    return (\n        <div>\n            {props.currentUser.username !== props.user.username ?  \n            <Grid container item \n            direction=\"row\"\n            // alignItems=\"top\"\n            xs={12} \n            style={{marginBottom:\"1%\"}}\n            >\n                <Grid item xs={0} style={{margin: 5, marginLeft:\"2%\", marginRight: 0, padding: 0}}>\n                        <AccountCircleIcon style={{fill: props.user.icon, backgroundColor: props.user.background, borderRadius: \"15px\"}}/>\n                </Grid>\n\n                <Grid item xs={5} style={{margin: 5, marginLeft: 10, padding:0}}>\n                    <Paper className= {classes.paper} elevation={3} style={{backgroundColor: \"#546e7a\"}}>\n                        <div className= {classes.text} >\n                            {props.message.text}\n                        </div>     \n                    </Paper>\n                        <Typography variant= \"subtitle2\" style={{float: \"left\", font: \"5\", color: \"#2bbd7e\"}}>\n                            {props.user.username}\n                        </Typography>\n                </Grid>\n\n            </Grid>\n            : \n            <Grid container item \n            direction=\"row\"\n            // alignItems=\"top\"\n            xs={12} \n            style={{marginBottom:\"1%\", marginLeft: \"51%\"}}\n            >\n                \n                <Grid item xs={5} style={{margin: 5, marginLeft: 10, padding:0}}>\n                            <Paper className= {classes.paper} elevation={3} style={{float: \"right\"}}>  \n                                <div className= {classes.text}>\n                                    {props.message.text}\n                                </div>   \n                            </Paper>\n                            <br/>\n                            <Typography variant= \"subtitle2\" style={{float: \"right\", font: \"5\", color: \"#2bbd7e\"}}>\n                                {props.user.username}\n                            </Typography>\n                        \n                </Grid>\n\n                <Grid item xs={0} style={{margin: 5, marginLeft:\"2%\", marginRight: 0, padding: 0}}>\n                    <AccountCircleIcon style={{fill: props.user.icon, backgroundColor: props.user.background, borderRadius: \"15px\"}}/>\n                </Grid>\n\n            </Grid>\n            }\n        </div>\n    )\n}\n\nexport default Message","import React, { useEffect, useState, useRef } from 'react'\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport TelegramIcon from '@material-ui/icons/Telegram';\n\nimport Message from \"./Message\"\n\nconst useStyles = makeStyles((theme) => ({\n    label: {\n        color: \"white\",\n    },\n    focusedLabel: {\n        color: \"#2bbd7e\"\n    },\n    text: {\n        color: \"#FFFFFF\"\n    }\n  }))\n\nconst ChatRoom = (props) => {\n\n    const classes = useStyles();\n\n    const messagesEndRef = useRef(null)  \n\n    const scrollToBottom = () => {    \n        messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" })  \n    }  \n\n    useEffect(scrollToBottom, [props.messages]);  \n\n    // debugger\n\n    return (\n        <Grid container item \n            direction=\"row\"\n            alignItems=\"top\"  \n            xs= {12} \n            className = {props.classes.chatSpace}\n        >\n            <Grid item xs={12}>\n                <Typography variant='h4' style={{textAlign: \"center\", color: \"#FFFFFF\"}}>\n                    <i> {props.channel.name} </i>\n                </Typography>\n            </Grid>\n            <Grid item xs= {12}>\n\n                <Paper elevation={15} className={props.classes.paper} style={{height: window.innerHeight/1.50, overflowY: \"auto\", overflowX: \"hidden\"}}>\n                    {props.messages.sort((a,b) => a.data.id - b.data.id ).map(message => {\n                        // console.log(message.data.id)\n                        return <Message message={message.data} user={message.user} currentUser={props.currentUser} key={message.data.id}/>\n                    })}\n                <div ref={messagesEndRef} />\n                </Paper>\n            </Grid>\n\n            <Grid \n            item xs= {12}\n            >\n                <Paper elevation={15} className={props.classes.paper} style= {{float: \"center\", width: \"auto\"}}>\n                    <form \n                    autoComplete= 'off'\n                    className= {props.classes.form} onSubmit={(e) => {\n                            e.preventDefault()\n                            if (!e.target[0].value == \"\"){\n                                props.makeMessage(e.target[0].value)\n                                e.currentTarget.reset()\n                            }\n                        }}>\n                        <TextField \n                        placeholder=\"\" \n                        id=\"outlined-basic\" \n                        label=\"Send Message\" \n                        variant=\"outlined\"\n                        InputLabelProps={{\n                            classes: {\n                                root: classes.label,\n                                focused: classes.focusedLabel\n                            }\n                        }} \n                        InputProps={{ className: classes.text}}\n                        style ={{ color: \"white\" , width: \"94%\"}} \n                        />\n                        <IconButton type= {\"submit\"} color=\"secondary\" aria-label=\"send\" style={{align: \"center\"}}>\n                            <TelegramIcon fontSize={\"large\"} style={{fill: \"#2bbd7e\"}}/>\n                        </IconButton>\n                    </form>\n                </Paper>\n            </Grid>\n      </Grid>\n    )\n}\n\nexport default ChatRoom;","export default __webpack_public_path__ + \"static/media/Logo.bb2c4dae.png\";","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { Grid } from '@material-ui/core';\n// import Modal from '@material-ui/core/Modal'\nimport logo from \"./images/Logo.png\"\nimport AddToQueueIcon from '@material-ui/icons/AddToQueue';\n\n\nconst drawerWidth = 180;\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    backgroundColor: \"#29434e\",\n    color: \"#FFFFFF\"\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n    '&:hover': {\n        color: \"white\",\n      }\n  },\n  hide: {\n    display: 'none',\n    color: \"white\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n    backgroundColor: \"#546e7a\",\n    color: \"white\"\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    backgroundColor: \"#546e7a\",\n    color: \"white\"\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n      \n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n    backgroundColor: \"#546e7a\",\n    color: \"white\"\n  },\n  list: {\n    color: \"white\",\n    '&:hover': {\n        color: \"#29434e\",\n      }\n  },\n  login: {\n    color: \"#FFFFFF\",\n    backgroundColor: \"#29434e\",\n    '&:hover': {\n      backgroundColor: \"#2bbd7e\",\n    },\n  }\n\n}));\n\nconst DrawerAndNav = (props) => {\n\n  // console.log(props.channels)\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n\n    return (\n        <div>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                [classes.appBarShift]: open,\n                })}\n                style= {{}}\n            >\n                <Toolbar style={{justifyContent: \"space-between\"}}>\n                    <IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    onClick={handleDrawerOpen}\n                    edge=\"start\"\n                    className={clsx(classes.menuButton, {\n                        [classes.hide]: open,\n                    })}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n\n                    <Grid container direction=\"column\" xs={5} >\n                      <Grid item xs={3} style={!open ? {marginLeft: \"40%\"} : {marginLeft:\"0\"}}>\n                        <Typography variant=\"inherit\" style={{float:\"left\", fontSize: \"18px\", color: \"#2bbd7e\"}}>\n                          <i>Kool</i> \n                        </Typography>\n                          <img src={logo} style={{width: \"40%\"}} alt=\"logo\"/>\n                        <Typography  variant=\"inherit\" style={{fontSize: \"18px\", color: \"#9bffff\"}}>\n                          <i>Khat</i>\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                      <Button onClick={props.handleLogout} className={classes.login}>\n                        logout\n                      </Button>\n                </Toolbar>\n            </AppBar>\n\n            <Drawer\n            variant=\"permanent\"\n            className={clsx(classes.drawer, {\n                [classes.drawerOpen]: open,\n                [classes.drawerClose]: !open,\n            })}\n            classes={{\n                paper: clsx({\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                }),\n            }}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'rtl' ? <ChevronRightIcon style={{color: \"white\"}}/> : <ChevronLeftIcon style={{color: \"white\"}} />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <br/>\n                <br/>\n                <Divider />\n                <div style={{textAlign: \"center\", backgroundColor: \"#29434e\"}}>Friends</div>\n                <Divider />\n                <List>\n                    {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                        <ListItem  button key={text}>\n                        <ListItemIcon className={classes.list}>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                        <ListItemText primary={text} />\n                        </ListItem>\n                    ))}\n                </List>\n                <Divider />\n                <div style={{textAlign: \"center\", backgroundColor: \"#29434e\"}}>\n                  Rooms\n                </div>\n                <Divider />\n                <List style={{overflow: \"auto\", height: \"35%\"}}>\n                  <ListItem button onClick={() => props.handleNewChannelOpen()}>\n                    <ListItemIcon >\n                          <AddToQueueIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary={\"New Room\"}/>\n                  </ListItem>\n                    {props.channels.map((channel) => (\n                      <ListItem button key={channel.name} onClick={() => props.setChannel(channel)}>\n                        <ListItemIcon className={classes.list} >  \n                          <InboxIcon /> \n                        </ListItemIcon>\n                        <ListItemText primary={channel.name} />\n                      </ListItem>\n                  ))}\n                </List>\n                <Divider />\n                <div style={{textAlign: \"center\", backgroundColor: \"#29434e\"}}>Settings</div>\n                <Divider />\n            </Drawer>\n        </div>\n    )\n}\n\nexport default DrawerAndNav\n","export default __webpack_public_path__ + \"static/media/loginbackground.47009031.png\";","import React from 'react'\nimport Button from \"@material-ui/core/Button\"\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\n// import { Typography } from '@material-ui/core'\nimport logo from \"./images/Logo.png\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport backgroundLogo from './images/loginbackground.png'\n\nconst useStyles = makeStyles((theme) => ({\n    label: {\n        color: \"black\",\n        width: \"100%\"\n    },\n    focusedLabel: {\n        color: \"black\"\n    },\n    modal: {\n        width: '30%',\n        maxWidth: '100vw',\n        maxHeight: '100%',\n        position: 'fixed',\n        top: '25%',\n        left: '35%',\n        overflow: 'auto',\n        height: \"50%\",\n        background: \"whitesmoke\",\n        backgroundImage: `url(${backgroundLogo})`,\n        backgroundSize: \"auto\",\n        border: \"3px solid white\"\n      },\n}))\n\nconst NewChannel = (props) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.modal}>\n            <form noValidate autoComplete=\"off\" onSubmit={(ev) => {\n                props.createNewChannel(ev)\n            }}>\n                <Grid container \n                    direction=\"column\"\n                    // alignItems=\"center\"\n                    xs= {12} \n                >\n                    <Grid container item xs={12} style={{margin: \"1%\"}} direction=\"row\">\n                        <img src={logo} style={{width: \"20%\", marginLeft: \"17px\"}} alt=\"logo\"/>\n                    </Grid>\n                    <Grid item xs={12} style={{margin: \"1%\", padding:\"10px\" , paddingTop:\"0px\"}} >\n                        <TextField \n                        placeholder=\"\" \n                        id=\"standard-basic\" \n                        label=\"Room Name\"\n                        InputLabelProps={{\n                            classes: {\n                                root: classes.label,\n                                focused: classes.focusedLabel\n                            }\n                        }} \n                        />\n                    </Grid>\n                    <Grid item xs={12} style={{margin: \"3%\", padding:\"10px\", paddingTop:\"0\"}}>\n                        <Button type=\"submit\" style={{background: \"#2bbd7e\"}}>\n                            Make ChatRoom\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    )\n}\n\nexport default NewChannel\n","import './App.css';\nimport React, { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid'\nimport ChatRoom from './ChatRoom'\nimport DrawerAndNav from \"./drawerAndNav\"\nimport Modal from '@material-ui/core/Modal'\nimport {createMuiTheme, ThemeProvider} from \"@material-ui/core/styles\"\nimport NewChannel from './NewChannel'\n\nconst loginTheme = createMuiTheme({\n  palette: {\n    primary:{\n      main: \"#000000\"\n    },\n    secondary: {\n      main: \"#000000\",\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: \"#819ca9\", //light blue\n    margin: 0,\n    padding: 0,\n    border: 0,\n    maxHeight: \"100%\",\n    height: window.innerHeight,\n    flexGrow: 1,\n    display: 'flex'\n  },\n  paper: {\n    background: \"#29434e\", //dark blue\n    margin: 5,\n    padding: 0,\n    border: 0,\n    \n  },\n  container: {\n    width: \"full\",\n    margin: 0,\n    padding: 10,\n    paddingLeft: 20,\n    paddingRight: 20,\n    border: 0,\n    align: \"center\"\n  },\n  form:{\n    align: \"center\"\n  },\n  info:{\n    background: \"#819ca9\"\n  },\n  chatSpace: {\n    background: \"#819ca9\",\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  }\n  \n \n}));\n\nconst App = (props) => {\n  //globals\n  const cableURL = \"wss://stormy-savannah-56656.herokuapp.com/cable\"\n\n  //hooks\n  const classes = useStyles();\n\n  \n  const [allChannels, setAllChannels] = useState([])\n  const [currentChannel, setCurrentChannel] = useState({channel: {}, messages: []})\n  // const [currentlySubscribed, setCurrentlySubscribed] = useState(props.currentUser.channels)\n  // const [loginOpen, setLoginOpen] = useState(false);\n  // const [loading, setLoading] = useState(true)\n  \n  // const [currentMessage, setCurrentMessage] = useState({})\n  \n  /**************************************************************************************************/ \n  \n  \n  const openWebSocket = (webSocketUrl, channelId) => {\n    const socket = (new WebSocket(webSocketUrl))\n    socket.onopen = event => {\n      // console.log(\"rocket socket!!\")\n      \n      const meta = {\n          id: channelId,\n          // change me!!!!\n          channel: \"ChannelChannel\"\n\n      }\n      const msg = JSON.stringify({\n        command: \"subscribe\",\n        identifier: JSON.stringify(meta)\n      })\n\n      socket.send(msg)\n    }\n    return socket\n  }\n\n  const [newChannelOpen, setNewChannelOpen] = useState(false);\n\n  const handleNewChannelOpen = () => {\n    setNewChannelOpen(true);\n  };\n\n  const handleNewChannelClose = () => {\n    setNewChannelOpen(false);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\")\n    props.setCurrentUser(null)\n    // setLoginOpen(false);\n    props.setToken(false)\n  }\n\n\n  const makeMessage = (words) => {\n    if (!!localStorage.getItem(\"token\")){\n      fetch(\"https://stormy-savannah-56656.herokuapp.com/messages\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\" : \"application/json\",\n          \"Authentication\": `bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({message: words, channel_id: localStorage.getItem(\"channelId\")})\n      })\n    }\n    else {\n      alert(\"you need to sign in\")\n    }\n  }\n\n  const setNewMessage = (event) =>  {\n    const evData = event.data\n    const response = JSON.parse(evData)\n    if(response.type === \"ping\"){\n      return;\n    }\n    else if (response.message) {\n      setCurrentChannel(prevState => ({...prevState, messages: [...prevState.messages, response.message.message_info]}))\n    }\n  }\n\n  const fetchUser = async () => {\n    //make this dynamic\n    // localStorage.setItem(\"channelId\", 12) //hardsetting localStorage, make sure number is set properly\n    const meta = {\n      headers: {\n        \"Authentication\": `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }\n    const res = await fetch(`https://stormy-savannah-56656.herokuapp.com/login/user`, meta)\n    const data = await res.json()\n\n    props.setCurrentUser(data.user)\n    // setLoading(false)\n  }\n\n  const getOldMessages = async () => {\n    //make this dynamic\n    // localStorage.setItem(\"channelId\", 12) //hardsetting localStorage, make sure number is set properly\n    const res = await fetch(`https://stormy-savannah-56656.herokuapp.com/channels/${localStorage.getItem(\"channelId\")}`)\n    \n    const data = await res.json()\n    setCurrentChannel((prevState) => ({...prevState, channel: data.channel, messages: data.message_info}))\n  }\n\n  const getChannels = () => {\n    fetch(`https://stormy-savannah-56656.herokuapp.com/channels`)\n      .then(res => res.json())\n      .then(channels => {\n        setAllChannels(channels)\n    })\n  }\n\n  const setMyChannel = (channel) => {\n    // if(!currentlySubscribed.includes(channel.id)){\n      const socket = openWebSocket(cableURL, channel.id)\n  \n      socket.onmessage = event => {\n        setNewMessage(event)\n      }\n    // }\n    localStorage.setItem(\"channelId\", channel.id)\n    getOldMessages()\n  }\n\n  const createNewChannel = (ev) => {\n    ev.preventDefault()\n    \n    fetch(\"https://stormy-savannah-56656.herokuapp.com/channels\", {\n      method: \"POST\",\n      headers: {\"Content-Type\" : \"application/json\"},\n      body: JSON.stringify({name: ev.target[0].value })\n    })\n    .then(res => res.json())\n    .then(async (channelInfo) => {\n      if(channelInfo === \"failed\"){\n        alert(\"Could not create channel\")\n      }\n      else {\n        const socket = openWebSocket(cableURL, channelInfo.id)\n        \n        socket.onmessage = event => {\n          setNewMessage(event)\n        }\n        await setAllChannels(prevState => ([...prevState, channelInfo]))\n        // await setCurrentlySubscribed(prevState => ([...prevState, channelInfo.id]))\n        localStorage.setItem(\"channelId\", channelInfo.id)\n        getOldMessages()\n        handleNewChannelClose()\n      }\n    })\n  }\n\n  useEffect(() => {\n\n    if (!!localStorage.getItem(\"token\")){\n      fetchUser()\n    }\n\n    // if (!loading){\n      \n      const stay = async () => {\n        await getOldMessages()\n        console.log(\"ran\");\n      }\n\n      stay()\n\n      getChannels()\n\n      const arr= [13,14]//currentlySubscribed// adjust to current channels\n\n      arr.map(channelId => {\n        localStorage.setItem(\"channelId\", arr[0])\n        const socket = openWebSocket(cableURL, channelId)\n\n        socket.onmessage = event => {\n          setNewMessage(event)\n        }\n        return arr;\n      })\n\n      // console.log(loading);\n      \n    // }\n\n  },[])\n\n  return (\n    <div className= {classes.root}>\n\n      <DrawerAndNav handleNewChannelOpen={handleNewChannelOpen} handleLogout={handleLogout} channels={allChannels} setChannel={setMyChannel}/> \n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n          <Container \n          className= {classes.container} \n          maxWidth= 'xl' \n          >\n            <Grid container direction=\"row\">\n              {/* left side  */}\n\n              {/* right side */}\n              <ChatRoom classes={classes} makeMessage={makeMessage} messages={currentChannel.messages} currentUser={props.currentUser} channel={currentChannel.channel}/>\n            </Grid>   \n          </Container>\n        </main>\n        <Modal\n        open={newChannelOpen}\n        onClose={handleNewChannelClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        >\n          <ThemeProvider theme={loginTheme}>\n            <NewChannel createNewChannel={createNewChannel}/> \n          </ThemeProvider>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App","import React from 'react'\nimport Button from \"@material-ui/core/Button\"\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\n// import { Typography } from '@material-ui/core'\nimport logo from \"./images/Logo.png\"\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    label: {\n        color: \"black\",\n        width: \"100%\"\n    },\n    focusedLabel: {\n        color: \"black\"\n    },\n    button:{\n        \n        '&:hover': {\n            backgroundColor: \"#2bbd7e\",\n            color: \"white\"\n          },\n    }\n}))\n\nconst Login = (props) => {\n    const classes = useStyles();\n\n    return (\n        <div className={props.classes.modal} style={{borderRadius: \"10%\"}}>\n            <form noValidate autoComplete=\"off\" onSubmit={(ev) => {\n                props.login(ev)\n                // localStorage.getItem(\"user\") ? props.handleLoginClose() : null\n            }}>\n                <Grid container \n                    direction=\"column\"\n                    // alignItems=\"center\"\n                    xs= {12} \n                >\n                    <Grid container item xs={12} style={{margin: \"1%\"}} direction=\"row\">\n                        <img src={logo} style={{width: \"20%\", marginLeft: \"17px\"}} alt=\"logo\"/>\n                    </Grid>\n                    <Grid item xs={12} style={{margin: \"1%\", padding:\"10px\" , paddingTop:\"0px\"}} >\n                        <TextField \n                        placeholder=\"\" \n                        id=\"standard-basic\" \n                        label=\"Username\"\n                        InputLabelProps={{\n                            classes: {\n                                root: classes.label,\n                                focused: classes.focusedLabel\n                            }\n                        }} \n                        />\n                    </Grid>\n                    <Grid item xs={12} style={{margin: \"1%\", padding:\"10px\" , paddingTop:\"0px\"}}>\n                        <TextField \n                        id=\"standard-password-input\" \n                        label=\"Password\" \n                        type=\"password\" \n                        autoComplete=\"current-password\"\n                        InputLabelProps={{\n                            classes: {\n                                root: classes.label,\n                                focused: classes.focusedLabel\n                            }\n                        }} \n                        />\n                    </Grid>\n                    <Grid item xs={12} style={{margin: \"3%\", padding:\"10px\", paddingTop:\"0\"}}>\n                        <Button type=\"submit\" className= {classes.button}>\n                            Login\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    )\n}\n\nexport default Login\n","import React from 'react'\nimport Button from \"@material-ui/core/Button\"\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\n// import { Typography } from '@material-ui/core'\nimport logo from \"./images/Logo.png\"\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    label: {\n        color: \"black\",\n        width: \"100%\"\n    },\n    focusedLabel: {\n        color: \"#22d5db\"\n    },\n    button:{\n\n        '&:hover': {\n            backgroundColor: \"#22d5db\",\n            color: \"black\"\n          },\n    }\n}))\n\nconst Signup = (props) => {\n    const classes = useStyles();\n\n    return (\n        <div className={props.classes.modal} style={{borderRadius: \"10%\"}}>\n            <form noValidate autoComplete=\"off\" onSubmit={(ev) => {\n                props.signup(ev)\n                // localStorage.getItem(\"user\") ? props.handleLoginClose() : null\n            }}>\n                <Grid container \n                    direction=\"column\"\n                    // alignItems=\"center\"\n                    xs= {12} \n                >\n                    <Grid container item xs={12} style={{margin: \"1%\"}} direction=\"row\">\n                        <img src={logo} style={{width: \"20%\", marginLeft: \"17px\"}} alt=\"logo\"/>\n                    </Grid>\n                    <Grid item xs={12} style={{margin: \"1%\", padding:\"10px\" , paddingTop:\"0px\"}} >\n                        <TextField \n                        placeholder=\"\" \n                        id=\"standard-basic\" \n                        label=\"Username\"\n                        InputLabelProps={{\n                            classes: {\n                                root: classes.label,\n                                focused: classes.focusedLabel\n                            }\n                        }} \n                        />\n                    </Grid>\n                    <Grid item xs={12} style={{margin: \"1%\", padding:\"10px\" , paddingTop:\"0px\"}}>\n                        <TextField \n                        id=\"standard-password-input\" \n                        label=\"Password\" \n                        type=\"password\" \n                        autoComplete=\"current-password\"\n                        InputLabelProps={{\n                            classes: {\n                                root: classes.label,\n                                focused: classes.focusedLabel\n                            }\n                        }} \n                        />\n                    </Grid>\n                    <Grid item xs={12} style={{margin: \"3%\", padding:\"10px\", paddingTop:\"0\"}}>\n                        <Button type=\"submit\" className= {classes.button}>\n                            Signup\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    )\n}\n\nexport default Signup\n","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button'\nimport { Grid } from '@material-ui/core';\nimport logo from \"./images/Logo.png\"\nimport backgroundLogo from \"./images/loginbackground.png\"\nimport Modal from '@material-ui/core/Modal'\nimport Login from \"./Login\"\nimport Signup from \"./Signup\"\nimport {createMuiTheme, ThemeProvider} from \"@material-ui/core/styles\"\n\nconst loginTheme = createMuiTheme({\n  palette: {\n    primary:{\n      main: \"#000000\"\n    },\n    secondary: {\n      main: \"#000000\",\n    },\n  },\n});\n\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    backgroundColor: \"#29434e\",\n    color: \"#FFFFFF\"\n  },\n  list: {\n    color: \"white\",\n    '&:hover': {\n        color: \"#29434e\",\n      }\n  },\n  login: {\n    color: \"#FFFFFF\",\n    backgroundColor: \"#29434e\",\n    '&:hover': {\n      backgroundColor: \"#2bbd7e\",\n    }\n  },\n  signUp: {\n    color: \"#FFFFFF\",\n    backgroundColor: \"#29434e\",\n    '&:hover': {\n      backgroundColor: \"#22d5db\",\n      color: \"black\"\n    },\n  },\n  modal: {\n    width: '30%',\n    maxWidth: '100vw',\n    maxHeight: '100%',\n    position: 'fixed',\n    top: '25%',\n    left: '35%',\n    overflow: 'auto',\n    height: \"50%\",\n    background: \"whitesmoke\",\n    backgroundImage: `url(${backgroundLogo})`,\n    backgroundSize: \"auto\",\n    border: \"3px solid white\"\n  },\n}));\n\n\nconst Welcome = (props) => {\n  const classes = useStyles();\n    \n  const [loginOpen, setLoginOpen] = useState(false);\n  const [signupOpen, setSignupOpen] = useState(false);\n\n  const handleLoginOpen = () => {\n    setLoginOpen(true);\n  };\n\n  const handleLoginClose = () => {\n      setLoginOpen(false);\n  };\n\n  const handleSignupOpen = () => {\n    setSignupOpen(true);\n  };\n\n  const handleSignupClose = () => {\n      setSignupOpen(false);\n  };\n\n  \n\n  return (\n    <div>\n      <AppBar\n      position=\"fixed\"\n      className={clsx(classes.appBar)} \n      >\n        <Toolbar style={{justifyContent: \"space-between\"}}>\n          <Grid container xs={5} direction=\"row\" >\n            <Grid item xs={3} direction=\"column\">\n              <Typography variant=\"inherit\" style={{float:\"left\", fontSize: \"18px\", color: \"#2bbd7e\"}}>\n                <i>Kool</i> \n              </Typography>\n                <img src={logo} style={{width: \"40%\"}} alt=\"logo\"/>\n              <Typography  variant=\"inherit\" style={{fontSize: \"18px\", color: \"#9bffff\"}}>\n                <i>Khat</i>\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Button onClick={handleSignupOpen} className={classes.signUp}>\n              Sign up\n            </Button>\n            <Button onClick={handleLoginOpen} className={classes.login}>\n              Login\n            </Button>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n\n      <Modal\n        open={loginOpen}\n        onClose={handleLoginClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        >\n          <ThemeProvider theme={loginTheme}>\n            <Login classes={classes} login={props.login} handleLoginClose={handleLoginClose}/>\n          </ThemeProvider>\n      </Modal>\n\n      <Modal\n        open={signupOpen}\n        onClose={handleSignupClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        >\n          <ThemeProvider theme={loginTheme}>\n            <Signup classes={classes} signup={props.signup} handleSignupClose={handleSignupClose}/>\n          </ThemeProvider>\n      </Modal>\n\n    </div>\n  );\n}\n\nexport default Welcome","import React, { useState } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport App from \"./App\"\nimport Welcome from \"./welcome\"\n\nconst Runner = () => {\n\n    const [token, setToken] = useState(localStorage.getItem(\"token\"))\n    const [currentUser, setCurrentUser] = useState(null)\n\n    const login = (event) => {\n        event.preventDefault()\n        // debugger\n        fetch(`https://stormy-savannah-56656.herokuapp.com/login/${event.target[0].value}`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\" : \"application/json\"\n          },\n          body: JSON.stringify({username: event.target[0].value, password: event.target[1].value})\n        })\n        .then(res => res.json())\n        .then(data => {\n          // console.log(data)\n          localStorage.setItem(\"token\", data.token)\n          setCurrentUser(data.user)\n          setToken(localStorage.getItem(\"token\"))\n        })\n    }\n\n    const signup = (event) => {\n        event.preventDefault()\n\n        const meta = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\" : \"application/json\"\n            },\n            body: JSON.stringify({username: event.target[0].value, password: event.target[1].value}) \n        }\n\n        fetch(`https://stormy-savannah-56656.herokuapp.com/users`, meta)\n        .then(res => res.json())\n        .then(data => {\n            console.log(data)\n            localStorage.setItem(\"token\", data.token)\n            setCurrentUser(data.user)\n            setToken(localStorage.getItem(\"token\"))\n        })\n\n    }\n\n    const changeToken = (change) => {\n        setToken(change)\n    }\n    \n    return (\n        <Router>\n            <Switch>\n            {/* <Route exact path=\"/\" component={() => <App setToken={changeToken} currentUser={currentUser} setCurrentUser={setCurrentUser}/>}/> */}\n              <Route exact path=\"/\" render={()=> !!token ? <Redirect to='/khat' /> : <Welcome setToken={changeToken} login={login} signup={signup}/>} />\n              <Route exact path=\"/khat\" render={() => !!token ? <App setToken={changeToken} currentUser={currentUser} setCurrentUser={setCurrentUser} /> : <Redirect to='/'/>} />\n\n              {/* <Route exact path=\"/\" render={() => this.state.searchedSchool ? <Redirect to='/listings'/> : <Body handleChange={this.handleChange} />} />\n              <Route exact path=\"/listings\" render={() => <ListingsPage searchedSchool={this.state.searchedSchool} listingsData={this.state.listingsData} />} /> */}\n            </Switch>\n        </Router>\n    )\n}\n\nexport default Runner\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\n// import App from './App';\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport 'fontsource-roboto';\nimport Typography from '@material-ui/core/Typography'\nimport Runner from \"./Runner\"\n\n\n\nconst theme = createMuiTheme({\n\n  typography: {\n      //for any general settings to be added accross the website\n      h3: {\n        textAlign: \"center\"\n      }\n\n  },\n  palette: {\n    primary: {\n      main: \"#2bbd7e\" \n    },\n    secondary: {\n      main: \"#9fffe0\" //Another orange-ish color\n    }\n  },\n  fontFamily: 'roboto' // as an aside, highly recommend importing roboto font for Material UI projects! Looks really nice\n});\n\nReactDOM.render(\n  <ThemeProvider \n  theme={theme}>\n      <Typography />\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Runner />\n        </BrowserRouter>\n      <Typography />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n\n//something something service worker ... \n//serviceWorker.unregister()"],"sourceRoot":""}